#!/bin/bash
clear

# vars
bin_dir="$(dirname $(realpath $0))"
# bin_dir="$(dirname $(readlink $0))"
filename=$1
output_dir=$2
last_line=""
cur_script=""
script_no=0
test_no=0
heading=""
heading_path=""
section_no=()
depth=0

# include functions from lib
source "$bin_dir/../src/lib.bash"

# init
if [ "$1" = "init"  ]
then
  source "$bin_dir/../src/init.bash"
fi

# check if initted
if [ ! -d __bd__ ]
then
  echo 'this folder is not initted for bash_down. please run "bash_down init"'
  echo
  exit
fi

if [ -z "$output_dir" ]
then
  output_dir=__bd__
fi

if [ -z "$filename" ]
then
  filename="__bd__/spec.bd"
fi


# recreate output files
rm -rf $output_dir/build
mkdir $output_dir/build
mkdir $output_dir/build/scripts
mkdir $output_dir/build/tests
touch $output_dir/build/spec.md
touch $output_dir/build/spec.txt


# iterate through lines in file and decide how to parse/output them
IFS=''
while read -r line
do
  # commented single line
  if [ ! -z "$(echo $line | grep -e '^[ ]*##![^ /].*$')" ]
  then
    continue 

  # commented script
  elif [ ! -z "$(echo $line | grep -e '^[ ]*##![/]*.*$')" ]
  then
    cur_script="$output_dir/build/scripts/$script_no"_"$heading_path"
    commented_script="$heading_path"

  # run through parser if we have a local path after #!
  elif [ ! -z "$(echo $line | grep -e '^[ ]*#![^ /].*$')" ]
  then
    local_parser

  # inline script - #!/some/shell
  elif [ ! -z "$(echo $line | grep -e '^[ ]*#![/]*.*$')" ]
  then
    inline_script

  # save and clear cur script if we get !#
  elif [ ! -z "$(echo $line | grep -e '^[ ]*!#$')" ]
  then
    inline_script_close

  # write to current script if we have one
  elif [ ! -z "$cur_script" ]
  then
    if [ -z "$commented_script" ]
    then
      echo $line >> $cur_script
    fi

  # heading
  elif [ ! -z "$(echo $line | grep -e '^#')" ]
  then
    heading
    last_line="$heading"
    
  # just write to markdown
  else
    echo $line >> $output_dir/build/spec.md
    echo $line >> $output_dir/build/spec.txt
    last_line="$line"
  fi

done < "$filename"

# print the text spec
cat $output_dir/build/spec.txt

# then execute the scripts
for file in $output_dir/build/scripts/*
do
  if [ -s $file ]
  then
    "$file"
  fi
done

# then execute the runners
for path in $output_dir/build/tests/*
do
  if [ -s $path ]
  then
  file=`basename "$path"`
    output=`"./__bd__/runners/$file" "$output_dir/build/tests/$file"`
    cat<<<"$output"
  fi
done
