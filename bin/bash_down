#!/bin/bash
clear

# vars
bin_dir="$(dirname $(realpath $0))"
filename=$1
last_line=""
cur_script=""
script_no=0
test_no=0
heading=""
heading_path=""
section_no=()
depth=0

# include functions from lib
source "$bin_dir/../src/lib.bash"

# handle no file passed
if [ -z "$1" ]
then
  echo 'please provide a file to process or pass "init" to init this folder'
  echo
  exit
fi

# init
if [ "$1" = "init"  ]
then
  source "$bin_dir/../src/init.bash"
fi

# check if initted
if [ ! -d bash_down ]
then
  echo 'this folder is not initted for bash_down. please run "bash_down init"'
  echo
  exit
fi

# recreate output files
rm -rf bash_down/scripts
mkdir bash_down/scripts
rm -rf bash_down/tests
mkdir bash_down/tests
rm bash_down/spec.md
touch bash_down/spec.md
rm bash_down/spec.txt
touch bash_down/spec.txt

# iterate through lines in file and decide how to parse/output them
IFS=''
while read -r line
do
  # commented single line
  if [ ! -z "$(echo $line | grep -e '^[ ]*##![^ /].*$')" ]
  then
    continue 
  # commented script
  elif [ ! -z "$(echo $line | grep -e '^[ ]*##![/]*.*$')" ]
  then
    cur_script="./bash_down/scripts/$script_no"_"$heading_path"
    commented_script="$heading_path"

  # run through parser if we have a local path after #!
  elif [ ! -z "$(echo $line | grep -e '^[ ]*#![^ /].*$')" ]
  then
    local_parser

  # inline script - #!/some/shell
  elif [ ! -z "$(echo $line | grep -e '^[ ]*#![/]*.*$')" ]
  then
    inline_script

  # execute and clear cur script if we get !#
  elif [ ! -z "$(echo $line | grep -e '^[ ]*!#$')" ]
  then
    inline_script_close

  # write to current script if we have one
  elif [ ! -z "$cur_script" ]
  then
    if [ -z "$commented_script" ]
    then
      echo $line >> "$cur_script"
    fi

  # heading
  elif [ ! -z "$(echo $line | grep -e '^#')" ]
  then
    heading
    last_line="$heading"
    
  # just write to markdown
  else
    echo $line >> bash_down/spec.md
    echo $line >> bash_down/spec.txt
    last_line="$line"
  fi

done < "$filename"

# print the text spec
cat bash_down/spec.txt

# then execute the scripts
for file in bash_down/scripts/*
do
  if [ -s $file ]
  then
    "$file"
  fi
done

# then execute the runners
for path in bash_down/tests/*
do
  if [ -s $path ]
  then
  file=`basename "$path"`
    output=`"./bash_down/runners/$file" "./bash_down/tests/$file"`
    cat<<<"$output"
  fi
done
